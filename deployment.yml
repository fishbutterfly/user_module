apiVersion: v1
kind: Service
metadata:
  name: ${application}
  labels:
    app: ${application}
spec:
  ports:
  - port: 80
    targetPort: 80
    protocol: TCP
  selector:
    app: ${application}
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-default-config
data:
  default.conf: |
    server {
        listen       0.0.0.0:80;
        server_name  web;

        location / {
            root   /usr/share/nginx/html;
            index  index.html index.htm;
            try_files $uri $uri/ /index.html;
        }

        location /files/ {
            alias /opt/iwms/;
            limit_except GET {
                deny all;
            }
        }

        error_page   500 502 503 504  /50x.html;
        location = /50x.html {
            root   /usr/share/nginx/html;
        }
    }

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: ${application}
spec:
  selector:
    matchLabels:
      app: ${application}
  serviceName: ${application}
  replicas: 1
  template:
    metadata:
      labels:
        app: ${application}
    spec:
      containers:
      - name: ${application}
        image: ${image}
        imagePullPolicy: Always
        volumeMounts:
          - name: default-config
            mountPath: /etc/nginx/conf.d
          - name: web-claim
            mountPath: /opt/x502
        ports:
        - containerPort: 80
        env:
          - name: HOST_IP
            valueFrom:
              fieldRef:
                fieldPath: status.hostIP
      volumes:
      - name: default-config
        configMap:
          name: nginx-default-config
          items:
            - path: "default.conf"
              key: default.conf
  volumeClaimTemplates:
    - metadata:
        name: web-claim
      spec:
        storageClassName: x502-web
        accessModes: [ "ReadOnlyMany" ]
        resources:
          requests:
            storage: 5Gi
